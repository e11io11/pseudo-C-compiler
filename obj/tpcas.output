Grammaire

    0 $accept: Prog $end

    1 Prog: DeclVars DeclFoncts

    2 DeclVars: DeclVars TYPE Declarateurs ';'
    3         | %empty

    4 Declarateurs: Declarateurs ',' IDENT
    5             | IDENT

    6 DeclFoncts: DeclFoncts DeclFonct
    7           | DeclFonct

    8 DeclFonct: EnTeteFonct Corps

    9 EnTeteFonct: TYPE IDENT '(' Parametres ')'
   10            | VOID IDENT '(' Parametres ')'

   11 Parametres: VOID
   12           | ListTypVar

   13 ListTypVar: ListTypVar ',' TYPE IDENT
   14           | TYPE IDENT

   15 Corps: '{' DeclVars SuiteInstr '}'

   16 SuiteInstr: SuiteInstr Instr
   17           | %empty

   18 Instr: LValue '=' Exp ';'
   19      | IF '(' Exp ')' Instr
   20      | IF '(' Exp ')' Instr ELSE Instr
   21      | WHILE '(' Exp ')' Instr
   22      | IDENT '(' Arguments ')' ';'
   23      | RETURN Exp ';'
   24      | RETURN ';'
   25      | '{' SuiteInstr '}'
   26      | ';'
   27      | Switch

   28 Exp: Exp OR TB
   29    | TB

   30 TB: TB AND FB
   31   | FB

   32 FB: FB EQ M
   33   | M

   34 M: M ORDER E
   35  | E

   36 E: E ADDSUB T
   37  | T

   38 T: T DIVSTAR F
   39  | F

   40 F: ADDSUB F
   41  | '!' F
   42  | '(' Exp ')'
   43  | NUM
   44  | CHARACTER
   45  | LValue
   46  | IDENT '(' Arguments ')'

   47 LValue: IDENT

   48 Arguments: ListExp
   49          | %empty

   50 ListExp: ListExp ',' Exp
   51        | Exp

   52 Switch: EnTeteSwitch CorpsSwitch

   53 EnTeteSwitch: SWITCH '(' Exp ')'

   54 CorpsSwitch: '{' SuiteSwitch SwitchEndElement '}'
   55            | '{' '}'

   56 SuiteSwitch: SuiteSwitch SwitchElement
   57            | %empty

   58 SwitchElement: CASE Exp ':'
   59              | DEFAULT ':'
   60              | BREAK ';'
   61              | Instr

   62 SwitchEndElement: BREAK ';'
   63                 | Instr


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    '!' (33) 41
    '(' (40) 9 10 19 20 21 22 42 46 53
    ')' (41) 9 10 19 20 21 22 42 46 53
    ',' (44) 4 13 50
    ':' (58) 58 59
    ';' (59) 2 18 22 23 24 26 60 62
    '=' (61) 18
    '{' (123) 15 25 54 55
    '}' (125) 15 25 54 55
    error (256)
    CHARACTER <byte> (258) 44
    ADDSUB <byte> (259) 36 40
    DIVSTAR <byte> (260) 38
    NUM <num> (261) 43
    IDENT <ident> (262) 4 5 9 10 13 14 22 46 47
    ORDER <comp> (263) 34
    EQ <comp> (264) 32
    TYPE <comp> (265) 2 9 13 14
    OR (266) 28
    AND (267) 30
    IF (268) 19 20
    WHILE (269) 21
    RETURN (270) 23 24
    VOID (271) 10 11
    ELSE (272) 20
    CASE (273) 58
    BREAK (274) 60 62
    SWITCH (275) 53
    DEFAULT (276) 59


Non-terminaux, suivis des règles où ils apparaissent

    $accept (31)
        à gauche: 0
    Prog <node> (32)
        à gauche: 1
        à droite: 0
    DeclVars <node> (33)
        à gauche: 2 3
        à droite: 1 2 15
    Declarateurs <node> (34)
        à gauche: 4 5
        à droite: 2 4
    DeclFoncts <node> (35)
        à gauche: 6 7
        à droite: 1 6
    DeclFonct <node> (36)
        à gauche: 8
        à droite: 6 7
    EnTeteFonct <node> (37)
        à gauche: 9 10
        à droite: 8
    Parametres <node> (38)
        à gauche: 11 12
        à droite: 9 10
    ListTypVar <node> (39)
        à gauche: 13 14
        à droite: 12 13
    Corps <node> (40)
        à gauche: 15
        à droite: 8
    SuiteInstr <node> (41)
        à gauche: 16 17
        à droite: 15 16 25
    Instr <node> (42)
        à gauche: 18 19 20 21 22 23 24 25 26 27
        à droite: 16 19 20 21 61 63
    Exp <node> (43)
        à gauche: 28 29
        à droite: 18 19 20 21 23 28 42 50 51 53 58
    TB <node> (44)
        à gauche: 30 31
        à droite: 28 29 30
    FB <node> (45)
        à gauche: 32 33
        à droite: 30 31 32
    M <node> (46)
        à gauche: 34 35
        à droite: 32 33 34
    E <node> (47)
        à gauche: 36 37
        à droite: 34 35 36
    T <node> (48)
        à gauche: 38 39
        à droite: 36 37 38
    F <node> (49)
        à gauche: 40 41 42 43 44 45 46
        à droite: 38 39 40 41
    LValue <node> (50)
        à gauche: 47
        à droite: 18 45
    Arguments <node> (51)
        à gauche: 48 49
        à droite: 22 46
    ListExp <node> (52)
        à gauche: 50 51
        à droite: 48 50
    Switch <node> (53)
        à gauche: 52
        à droite: 27
    EnTeteSwitch <node> (54)
        à gauche: 53
        à droite: 52
    CorpsSwitch <node> (55)
        à gauche: 54 55
        à droite: 52
    SuiteSwitch <node> (56)
        à gauche: 56 57
        à droite: 54 56
    SwitchElement <node> (57)
        à gauche: 58 59 60 61
        à droite: 56
    SwitchEndElement <node> (58)
        à gauche: 62 63
        à droite: 54


État 0

    0 $accept: . Prog $end
    1 Prog: . DeclVars DeclFoncts
    2 DeclVars: . DeclVars TYPE Declarateurs ';'
    3         | . %empty

    $défaut  réduction par utilisation de la règle 3 (DeclVars)

    Prog      aller à l'état 1
    DeclVars  aller à l'état 2


État 1

    0 $accept: Prog . $end

    $end  décalage et aller à l'état 3


État 2

    1 Prog: DeclVars . DeclFoncts
    2 DeclVars: DeclVars . TYPE Declarateurs ';'
    6 DeclFoncts: . DeclFoncts DeclFonct
    7           | . DeclFonct
    8 DeclFonct: . EnTeteFonct Corps
    9 EnTeteFonct: . TYPE IDENT '(' Parametres ')'
   10            | . VOID IDENT '(' Parametres ')'

    TYPE  décalage et aller à l'état 4
    VOID  décalage et aller à l'état 5

    DeclFoncts   aller à l'état 6
    DeclFonct    aller à l'état 7
    EnTeteFonct  aller à l'état 8


État 3

    0 $accept: Prog $end .

    $défaut  accepter


État 4

    2 DeclVars: DeclVars TYPE . Declarateurs ';'
    4 Declarateurs: . Declarateurs ',' IDENT
    5             | . IDENT
    9 EnTeteFonct: TYPE . IDENT '(' Parametres ')'

    IDENT  décalage et aller à l'état 9

    Declarateurs  aller à l'état 10


État 5

   10 EnTeteFonct: VOID . IDENT '(' Parametres ')'

    IDENT  décalage et aller à l'état 11


État 6

    1 Prog: DeclVars DeclFoncts .  [$end]
    6 DeclFoncts: DeclFoncts . DeclFonct
    8 DeclFonct: . EnTeteFonct Corps
    9 EnTeteFonct: . TYPE IDENT '(' Parametres ')'
   10            | . VOID IDENT '(' Parametres ')'

    TYPE  décalage et aller à l'état 12
    VOID  décalage et aller à l'état 5

    $défaut  réduction par utilisation de la règle 1 (Prog)

    DeclFonct    aller à l'état 13
    EnTeteFonct  aller à l'état 8


État 7

    7 DeclFoncts: DeclFonct .

    $défaut  réduction par utilisation de la règle 7 (DeclFoncts)


État 8

    8 DeclFonct: EnTeteFonct . Corps
   15 Corps: . '{' DeclVars SuiteInstr '}'

    '{'  décalage et aller à l'état 14

    Corps  aller à l'état 15


État 9

    5 Declarateurs: IDENT .  [';', ',']
    9 EnTeteFonct: TYPE IDENT . '(' Parametres ')'

    '('  décalage et aller à l'état 16

    $défaut  réduction par utilisation de la règle 5 (Declarateurs)


État 10

    2 DeclVars: DeclVars TYPE Declarateurs . ';'
    4 Declarateurs: Declarateurs . ',' IDENT

    ';'  décalage et aller à l'état 17
    ','  décalage et aller à l'état 18


État 11

   10 EnTeteFonct: VOID IDENT . '(' Parametres ')'

    '('  décalage et aller à l'état 19


État 12

    9 EnTeteFonct: TYPE . IDENT '(' Parametres ')'

    IDENT  décalage et aller à l'état 20


État 13

    6 DeclFoncts: DeclFoncts DeclFonct .

    $défaut  réduction par utilisation de la règle 6 (DeclFoncts)


État 14

    2 DeclVars: . DeclVars TYPE Declarateurs ';'
    3         | . %empty
   15 Corps: '{' . DeclVars SuiteInstr '}'

    $défaut  réduction par utilisation de la règle 3 (DeclVars)

    DeclVars  aller à l'état 21


État 15

    8 DeclFonct: EnTeteFonct Corps .

    $défaut  réduction par utilisation de la règle 8 (DeclFonct)


État 16

    9 EnTeteFonct: TYPE IDENT '(' . Parametres ')'
   11 Parametres: . VOID
   12           | . ListTypVar
   13 ListTypVar: . ListTypVar ',' TYPE IDENT
   14           | . TYPE IDENT

    TYPE  décalage et aller à l'état 22
    VOID  décalage et aller à l'état 23

    Parametres  aller à l'état 24
    ListTypVar  aller à l'état 25


État 17

    2 DeclVars: DeclVars TYPE Declarateurs ';' .

    $défaut  réduction par utilisation de la règle 2 (DeclVars)


État 18

    4 Declarateurs: Declarateurs ',' . IDENT

    IDENT  décalage et aller à l'état 26


État 19

   10 EnTeteFonct: VOID IDENT '(' . Parametres ')'
   11 Parametres: . VOID
   12           | . ListTypVar
   13 ListTypVar: . ListTypVar ',' TYPE IDENT
   14           | . TYPE IDENT

    TYPE  décalage et aller à l'état 22
    VOID  décalage et aller à l'état 23

    Parametres  aller à l'état 27
    ListTypVar  aller à l'état 25


État 20

    9 EnTeteFonct: TYPE IDENT . '(' Parametres ')'

    '('  décalage et aller à l'état 16


État 21

    2 DeclVars: DeclVars . TYPE Declarateurs ';'
   15 Corps: '{' DeclVars . SuiteInstr '}'
   16 SuiteInstr: . SuiteInstr Instr
   17           | . %empty  [IDENT, IF, WHILE, RETURN, SWITCH, ';', '{', '}']

    TYPE  décalage et aller à l'état 28

    $défaut  réduction par utilisation de la règle 17 (SuiteInstr)

    SuiteInstr  aller à l'état 29


État 22

   14 ListTypVar: TYPE . IDENT

    IDENT  décalage et aller à l'état 30


État 23

   11 Parametres: VOID .

    $défaut  réduction par utilisation de la règle 11 (Parametres)


État 24

    9 EnTeteFonct: TYPE IDENT '(' Parametres . ')'

    ')'  décalage et aller à l'état 31


État 25

   12 Parametres: ListTypVar .  [')']
   13 ListTypVar: ListTypVar . ',' TYPE IDENT

    ','  décalage et aller à l'état 32

    $défaut  réduction par utilisation de la règle 12 (Parametres)


État 26

    4 Declarateurs: Declarateurs ',' IDENT .

    $défaut  réduction par utilisation de la règle 4 (Declarateurs)


État 27

   10 EnTeteFonct: VOID IDENT '(' Parametres . ')'

    ')'  décalage et aller à l'état 33


État 28

    2 DeclVars: DeclVars TYPE . Declarateurs ';'
    4 Declarateurs: . Declarateurs ',' IDENT
    5             | . IDENT

    IDENT  décalage et aller à l'état 34

    Declarateurs  aller à l'état 10


État 29

   15 Corps: '{' DeclVars SuiteInstr . '}'
   16 SuiteInstr: SuiteInstr . Instr
   18 Instr: . LValue '=' Exp ';'
   19      | . IF '(' Exp ')' Instr
   20      | . IF '(' Exp ')' Instr ELSE Instr
   21      | . WHILE '(' Exp ')' Instr
   22      | . IDENT '(' Arguments ')' ';'
   23      | . RETURN Exp ';'
   24      | . RETURN ';'
   25      | . '{' SuiteInstr '}'
   26      | . ';'
   27      | . Switch
   47 LValue: . IDENT
   52 Switch: . EnTeteSwitch CorpsSwitch
   53 EnTeteSwitch: . SWITCH '(' Exp ')'

    IDENT   décalage et aller à l'état 35
    IF      décalage et aller à l'état 36
    WHILE   décalage et aller à l'état 37
    RETURN  décalage et aller à l'état 38
    SWITCH  décalage et aller à l'état 39
    ';'     décalage et aller à l'état 40
    '{'     décalage et aller à l'état 41
    '}'     décalage et aller à l'état 42

    Instr         aller à l'état 43
    LValue        aller à l'état 44
    Switch        aller à l'état 45
    EnTeteSwitch  aller à l'état 46


État 30

   14 ListTypVar: TYPE IDENT .

    $défaut  réduction par utilisation de la règle 14 (ListTypVar)


État 31

    9 EnTeteFonct: TYPE IDENT '(' Parametres ')' .

    $défaut  réduction par utilisation de la règle 9 (EnTeteFonct)


État 32

   13 ListTypVar: ListTypVar ',' . TYPE IDENT

    TYPE  décalage et aller à l'état 47


État 33

   10 EnTeteFonct: VOID IDENT '(' Parametres ')' .

    $défaut  réduction par utilisation de la règle 10 (EnTeteFonct)


État 34

    5 Declarateurs: IDENT .

    $défaut  réduction par utilisation de la règle 5 (Declarateurs)


État 35

   22 Instr: IDENT . '(' Arguments ')' ';'
   47 LValue: IDENT .  ['=']

    '('  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 47 (LValue)


État 36

   19 Instr: IF . '(' Exp ')' Instr
   20      | IF . '(' Exp ')' Instr ELSE Instr

    '('  décalage et aller à l'état 49


État 37

   21 Instr: WHILE . '(' Exp ')' Instr

    '('  décalage et aller à l'état 50


État 38

   23 Instr: RETURN . Exp ';'
   24      | RETURN . ';'
   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    ';'        décalage et aller à l'état 55
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 58
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 39

   53 EnTeteSwitch: SWITCH . '(' Exp ')'

    '('  décalage et aller à l'état 66


État 40

   26 Instr: ';' .

    $défaut  réduction par utilisation de la règle 26 (Instr)


État 41

   16 SuiteInstr: . SuiteInstr Instr
   17           | . %empty
   25 Instr: '{' . SuiteInstr '}'

    $défaut  réduction par utilisation de la règle 17 (SuiteInstr)

    SuiteInstr  aller à l'état 67


État 42

   15 Corps: '{' DeclVars SuiteInstr '}' .

    $défaut  réduction par utilisation de la règle 15 (Corps)


État 43

   16 SuiteInstr: SuiteInstr Instr .

    $défaut  réduction par utilisation de la règle 16 (SuiteInstr)


État 44

   18 Instr: LValue . '=' Exp ';'

    '='  décalage et aller à l'état 68


État 45

   27 Instr: Switch .

    $défaut  réduction par utilisation de la règle 27 (Instr)


État 46

   52 Switch: EnTeteSwitch . CorpsSwitch
   54 CorpsSwitch: . '{' SuiteSwitch SwitchEndElement '}'
   55            | . '{' '}'

    '{'  décalage et aller à l'état 69

    CorpsSwitch  aller à l'état 70


État 47

   13 ListTypVar: ListTypVar ',' TYPE . IDENT

    IDENT  décalage et aller à l'état 71


État 48

   22 Instr: IDENT '(' . Arguments ')' ';'
   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT
   48 Arguments: . ListExp
   49          | . %empty  [')']
   50 ListExp: . ListExp ',' Exp
   51        | . Exp

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    $défaut  réduction par utilisation de la règle 49 (Arguments)

    Exp        aller à l'état 72
    TB         aller à l'état 59
    FB         aller à l'état 60
    M          aller à l'état 61
    E          aller à l'état 62
    T          aller à l'état 63
    F          aller à l'état 64
    LValue     aller à l'état 65
    Arguments  aller à l'état 73
    ListExp    aller à l'état 74


État 49

   19 Instr: IF '(' . Exp ')' Instr
   20      | IF '(' . Exp ')' Instr ELSE Instr
   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 75
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 50

   21 Instr: WHILE '(' . Exp ')' Instr
   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 76
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 51

   44 F: CHARACTER .

    $défaut  réduction par utilisation de la règle 44 (F)


État 52

   40 F: . ADDSUB F
   40  | ADDSUB . F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    F       aller à l'état 77
    LValue  aller à l'état 65


État 53

   43 F: NUM .

    $défaut  réduction par utilisation de la règle 43 (F)


État 54

   46 F: IDENT . '(' Arguments ')'
   47 LValue: IDENT .  [ADDSUB, DIVSTAR, ORDER, EQ, OR, AND, ')', ';', ',', ':']

    '('  décalage et aller à l'état 78

    $défaut  réduction par utilisation de la règle 47 (LValue)


État 55

   24 Instr: RETURN ';' .

    $défaut  réduction par utilisation de la règle 24 (Instr)


État 56

   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   42  | '(' . Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 79
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 57

   40 F: . ADDSUB F
   41  | . '!' F
   41  | '!' . F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    F       aller à l'état 80
    LValue  aller à l'état 65


État 58

   23 Instr: RETURN Exp . ';'
   28 Exp: Exp . OR TB

    OR   décalage et aller à l'état 81
    ';'  décalage et aller à l'état 82


État 59

   29 Exp: TB .  [OR, ')', ';', ',', ':']
   30 TB: TB . AND FB

    AND  décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 29 (Exp)


État 60

   31 TB: FB .  [OR, AND, ')', ';', ',', ':']
   32 FB: FB . EQ M

    EQ  décalage et aller à l'état 84

    $défaut  réduction par utilisation de la règle 31 (TB)


État 61

   33 FB: M .  [EQ, OR, AND, ')', ';', ',', ':']
   34 M: M . ORDER E

    ORDER  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 33 (FB)


État 62

   35 M: E .  [ORDER, EQ, OR, AND, ')', ';', ',', ':']
   36 E: E . ADDSUB T

    ADDSUB  décalage et aller à l'état 86

    $défaut  réduction par utilisation de la règle 35 (M)


État 63

   37 E: T .  [ADDSUB, ORDER, EQ, OR, AND, ')', ';', ',', ':']
   38 T: T . DIVSTAR F

    DIVSTAR  décalage et aller à l'état 87

    $défaut  réduction par utilisation de la règle 37 (E)


État 64

   39 T: F .

    $défaut  réduction par utilisation de la règle 39 (T)


État 65

   45 F: LValue .

    $défaut  réduction par utilisation de la règle 45 (F)


État 66

   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT
   53 EnTeteSwitch: SWITCH '(' . Exp ')'

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 88
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 67

   16 SuiteInstr: SuiteInstr . Instr
   18 Instr: . LValue '=' Exp ';'
   19      | . IF '(' Exp ')' Instr
   20      | . IF '(' Exp ')' Instr ELSE Instr
   21      | . WHILE '(' Exp ')' Instr
   22      | . IDENT '(' Arguments ')' ';'
   23      | . RETURN Exp ';'
   24      | . RETURN ';'
   25      | . '{' SuiteInstr '}'
   25      | '{' SuiteInstr . '}'
   26      | . ';'
   27      | . Switch
   47 LValue: . IDENT
   52 Switch: . EnTeteSwitch CorpsSwitch
   53 EnTeteSwitch: . SWITCH '(' Exp ')'

    IDENT   décalage et aller à l'état 35
    IF      décalage et aller à l'état 36
    WHILE   décalage et aller à l'état 37
    RETURN  décalage et aller à l'état 38
    SWITCH  décalage et aller à l'état 39
    ';'     décalage et aller à l'état 40
    '{'     décalage et aller à l'état 41
    '}'     décalage et aller à l'état 89

    Instr         aller à l'état 43
    LValue        aller à l'état 44
    Switch        aller à l'état 45
    EnTeteSwitch  aller à l'état 46


État 68

   18 Instr: LValue '=' . Exp ';'
   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 90
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 69

   54 CorpsSwitch: '{' . SuiteSwitch SwitchEndElement '}'
   55            | '{' . '}'
   56 SuiteSwitch: . SuiteSwitch SwitchElement
   57            | . %empty  [IDENT, IF, WHILE, RETURN, CASE, BREAK, SWITCH, DEFAULT, ';', '{']

    '}'  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 57 (SuiteSwitch)

    SuiteSwitch  aller à l'état 92


État 70

   52 Switch: EnTeteSwitch CorpsSwitch .

    $défaut  réduction par utilisation de la règle 52 (Switch)


État 71

   13 ListTypVar: ListTypVar ',' TYPE IDENT .

    $défaut  réduction par utilisation de la règle 13 (ListTypVar)


État 72

   28 Exp: Exp . OR TB
   51 ListExp: Exp .  [')', ',']

    OR  décalage et aller à l'état 81

    $défaut  réduction par utilisation de la règle 51 (ListExp)


État 73

   22 Instr: IDENT '(' Arguments . ')' ';'

    ')'  décalage et aller à l'état 93


État 74

   48 Arguments: ListExp .  [')']
   50 ListExp: ListExp . ',' Exp

    ','  décalage et aller à l'état 94

    $défaut  réduction par utilisation de la règle 48 (Arguments)


État 75

   19 Instr: IF '(' Exp . ')' Instr
   20      | IF '(' Exp . ')' Instr ELSE Instr
   28 Exp: Exp . OR TB

    OR   décalage et aller à l'état 81
    ')'  décalage et aller à l'état 95


État 76

   21 Instr: WHILE '(' Exp . ')' Instr
   28 Exp: Exp . OR TB

    OR   décalage et aller à l'état 81
    ')'  décalage et aller à l'état 96


État 77

   40 F: ADDSUB F .

    $défaut  réduction par utilisation de la règle 40 (F)


État 78

   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   46  | IDENT '(' . Arguments ')'
   47 LValue: . IDENT
   48 Arguments: . ListExp
   49          | . %empty  [')']
   50 ListExp: . ListExp ',' Exp
   51        | . Exp

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    $défaut  réduction par utilisation de la règle 49 (Arguments)

    Exp        aller à l'état 72
    TB         aller à l'état 59
    FB         aller à l'état 60
    M          aller à l'état 61
    E          aller à l'état 62
    T          aller à l'état 63
    F          aller à l'état 64
    LValue     aller à l'état 65
    Arguments  aller à l'état 97
    ListExp    aller à l'état 74


État 79

   28 Exp: Exp . OR TB
   42 F: '(' Exp . ')'

    OR   décalage et aller à l'état 81
    ')'  décalage et aller à l'état 98


État 80

   41 F: '!' F .

    $défaut  réduction par utilisation de la règle 41 (F)


État 81

   28 Exp: Exp OR . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    TB      aller à l'état 99
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 82

   23 Instr: RETURN Exp ';' .

    $défaut  réduction par utilisation de la règle 23 (Instr)


État 83

   30 TB: TB AND . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    FB      aller à l'état 100
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 84

   32 FB: FB EQ . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    M       aller à l'état 101
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 85

   34 M: M ORDER . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    E       aller à l'état 102
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 86

   36 E: E ADDSUB . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    T       aller à l'état 103
    F       aller à l'état 64
    LValue  aller à l'état 65


État 87

   38 T: T DIVSTAR . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    F       aller à l'état 104
    LValue  aller à l'état 65


État 88

   28 Exp: Exp . OR TB
   53 EnTeteSwitch: SWITCH '(' Exp . ')'

    OR   décalage et aller à l'état 81
    ')'  décalage et aller à l'état 105


État 89

   25 Instr: '{' SuiteInstr '}' .

    $défaut  réduction par utilisation de la règle 25 (Instr)


État 90

   18 Instr: LValue '=' Exp . ';'
   28 Exp: Exp . OR TB

    OR   décalage et aller à l'état 81
    ';'  décalage et aller à l'état 106


État 91

   55 CorpsSwitch: '{' '}' .

    $défaut  réduction par utilisation de la règle 55 (CorpsSwitch)


État 92

   18 Instr: . LValue '=' Exp ';'
   19      | . IF '(' Exp ')' Instr
   20      | . IF '(' Exp ')' Instr ELSE Instr
   21      | . WHILE '(' Exp ')' Instr
   22      | . IDENT '(' Arguments ')' ';'
   23      | . RETURN Exp ';'
   24      | . RETURN ';'
   25      | . '{' SuiteInstr '}'
   26      | . ';'
   27      | . Switch
   47 LValue: . IDENT
   52 Switch: . EnTeteSwitch CorpsSwitch
   53 EnTeteSwitch: . SWITCH '(' Exp ')'
   54 CorpsSwitch: '{' SuiteSwitch . SwitchEndElement '}'
   56 SuiteSwitch: SuiteSwitch . SwitchElement
   58 SwitchElement: . CASE Exp ':'
   59              | . DEFAULT ':'
   60              | . BREAK ';'
   61              | . Instr
   62 SwitchEndElement: . BREAK ';'
   63                 | . Instr

    IDENT    décalage et aller à l'état 35
    IF       décalage et aller à l'état 36
    WHILE    décalage et aller à l'état 37
    RETURN   décalage et aller à l'état 38
    CASE     décalage et aller à l'état 107
    BREAK    décalage et aller à l'état 108
    SWITCH   décalage et aller à l'état 39
    DEFAULT  décalage et aller à l'état 109
    ';'      décalage et aller à l'état 40
    '{'      décalage et aller à l'état 41

    Instr             aller à l'état 110
    LValue            aller à l'état 44
    Switch            aller à l'état 45
    EnTeteSwitch      aller à l'état 46
    SwitchElement     aller à l'état 111
    SwitchEndElement  aller à l'état 112


État 93

   22 Instr: IDENT '(' Arguments ')' . ';'

    ';'  décalage et aller à l'état 113


État 94

   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT
   50 ListExp: ListExp ',' . Exp

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 114
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 95

   18 Instr: . LValue '=' Exp ';'
   19      | . IF '(' Exp ')' Instr
   19      | IF '(' Exp ')' . Instr
   20      | . IF '(' Exp ')' Instr ELSE Instr
   20      | IF '(' Exp ')' . Instr ELSE Instr
   21      | . WHILE '(' Exp ')' Instr
   22      | . IDENT '(' Arguments ')' ';'
   23      | . RETURN Exp ';'
   24      | . RETURN ';'
   25      | . '{' SuiteInstr '}'
   26      | . ';'
   27      | . Switch
   47 LValue: . IDENT
   52 Switch: . EnTeteSwitch CorpsSwitch
   53 EnTeteSwitch: . SWITCH '(' Exp ')'

    IDENT   décalage et aller à l'état 35
    IF      décalage et aller à l'état 36
    WHILE   décalage et aller à l'état 37
    RETURN  décalage et aller à l'état 38
    SWITCH  décalage et aller à l'état 39
    ';'     décalage et aller à l'état 40
    '{'     décalage et aller à l'état 41

    Instr         aller à l'état 115
    LValue        aller à l'état 44
    Switch        aller à l'état 45
    EnTeteSwitch  aller à l'état 46


État 96

   18 Instr: . LValue '=' Exp ';'
   19      | . IF '(' Exp ')' Instr
   20      | . IF '(' Exp ')' Instr ELSE Instr
   21      | . WHILE '(' Exp ')' Instr
   21      | WHILE '(' Exp ')' . Instr
   22      | . IDENT '(' Arguments ')' ';'
   23      | . RETURN Exp ';'
   24      | . RETURN ';'
   25      | . '{' SuiteInstr '}'
   26      | . ';'
   27      | . Switch
   47 LValue: . IDENT
   52 Switch: . EnTeteSwitch CorpsSwitch
   53 EnTeteSwitch: . SWITCH '(' Exp ')'

    IDENT   décalage et aller à l'état 35
    IF      décalage et aller à l'état 36
    WHILE   décalage et aller à l'état 37
    RETURN  décalage et aller à l'état 38
    SWITCH  décalage et aller à l'état 39
    ';'     décalage et aller à l'état 40
    '{'     décalage et aller à l'état 41

    Instr         aller à l'état 116
    LValue        aller à l'état 44
    Switch        aller à l'état 45
    EnTeteSwitch  aller à l'état 46


État 97

   46 F: IDENT '(' Arguments . ')'

    ')'  décalage et aller à l'état 117


État 98

   42 F: '(' Exp ')' .

    $défaut  réduction par utilisation de la règle 42 (F)


État 99

   28 Exp: Exp OR TB .  [OR, ')', ';', ',', ':']
   30 TB: TB . AND FB

    AND  décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 28 (Exp)


État 100

   30 TB: TB AND FB .  [OR, AND, ')', ';', ',', ':']
   32 FB: FB . EQ M

    EQ  décalage et aller à l'état 84

    $défaut  réduction par utilisation de la règle 30 (TB)


État 101

   32 FB: FB EQ M .  [EQ, OR, AND, ')', ';', ',', ':']
   34 M: M . ORDER E

    ORDER  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 32 (FB)


État 102

   34 M: M ORDER E .  [ORDER, EQ, OR, AND, ')', ';', ',', ':']
   36 E: E . ADDSUB T

    ADDSUB  décalage et aller à l'état 86

    $défaut  réduction par utilisation de la règle 34 (M)


État 103

   36 E: E ADDSUB T .  [ADDSUB, ORDER, EQ, OR, AND, ')', ';', ',', ':']
   38 T: T . DIVSTAR F

    DIVSTAR  décalage et aller à l'état 87

    $défaut  réduction par utilisation de la règle 36 (E)


État 104

   38 T: T DIVSTAR F .

    $défaut  réduction par utilisation de la règle 38 (T)


État 105

   53 EnTeteSwitch: SWITCH '(' Exp ')' .

    $défaut  réduction par utilisation de la règle 53 (EnTeteSwitch)


État 106

   18 Instr: LValue '=' Exp ';' .

    $défaut  réduction par utilisation de la règle 18 (Instr)


État 107

   28 Exp: . Exp OR TB
   29    | . TB
   30 TB: . TB AND FB
   31   | . FB
   32 FB: . FB EQ M
   33   | . M
   34 M: . M ORDER E
   35  | . E
   36 E: . E ADDSUB T
   37  | . T
   38 T: . T DIVSTAR F
   39  | . F
   40 F: . ADDSUB F
   41  | . '!' F
   42  | . '(' Exp ')'
   43  | . NUM
   44  | . CHARACTER
   45  | . LValue
   46  | . IDENT '(' Arguments ')'
   47 LValue: . IDENT
   58 SwitchElement: CASE . Exp ':'

    CHARACTER  décalage et aller à l'état 51
    ADDSUB     décalage et aller à l'état 52
    NUM        décalage et aller à l'état 53
    IDENT      décalage et aller à l'état 54
    '('        décalage et aller à l'état 56
    '!'        décalage et aller à l'état 57

    Exp     aller à l'état 118
    TB      aller à l'état 59
    FB      aller à l'état 60
    M       aller à l'état 61
    E       aller à l'état 62
    T       aller à l'état 63
    F       aller à l'état 64
    LValue  aller à l'état 65


État 108

   60 SwitchElement: BREAK . ';'
   62 SwitchEndElement: BREAK . ';'

    ';'  décalage et aller à l'état 119


État 109

   59 SwitchElement: DEFAULT . ':'

    ':'  décalage et aller à l'état 120


État 110

   61 SwitchElement: Instr .  [IDENT, IF, WHILE, RETURN, CASE, BREAK, SWITCH, DEFAULT, ';', '{']
   63 SwitchEndElement: Instr .  ['}']

    '}'       réduction par utilisation de la règle 63 (SwitchEndElement)
    $défaut  réduction par utilisation de la règle 61 (SwitchElement)


État 111

   56 SuiteSwitch: SuiteSwitch SwitchElement .

    $défaut  réduction par utilisation de la règle 56 (SuiteSwitch)


État 112

   54 CorpsSwitch: '{' SuiteSwitch SwitchEndElement . '}'

    '}'  décalage et aller à l'état 121


État 113

   22 Instr: IDENT '(' Arguments ')' ';' .

    $défaut  réduction par utilisation de la règle 22 (Instr)


État 114

   28 Exp: Exp . OR TB
   50 ListExp: ListExp ',' Exp .  [')', ',']

    OR  décalage et aller à l'état 81

    $défaut  réduction par utilisation de la règle 50 (ListExp)


État 115

   19 Instr: IF '(' Exp ')' Instr .  [IDENT, IF, WHILE, RETURN, CASE, BREAK, SWITCH, DEFAULT, ';', '{', '}']
   20      | IF '(' Exp ')' Instr . ELSE Instr

    ELSE  décalage et aller à l'état 122

    $défaut  réduction par utilisation de la règle 19 (Instr)

    Conflit entre la règle 19 et le jeton ELSE résolu par décalage (')' < ELSE).


État 116

   21 Instr: WHILE '(' Exp ')' Instr .

    $défaut  réduction par utilisation de la règle 21 (Instr)


État 117

   46 F: IDENT '(' Arguments ')' .

    $défaut  réduction par utilisation de la règle 46 (F)


État 118

   28 Exp: Exp . OR TB
   58 SwitchElement: CASE Exp . ':'

    OR   décalage et aller à l'état 81
    ':'  décalage et aller à l'état 123


État 119

   60 SwitchElement: BREAK ';' .  [IDENT, IF, WHILE, RETURN, CASE, BREAK, SWITCH, DEFAULT, ';', '{']
   62 SwitchEndElement: BREAK ';' .  ['}']

    '}'       réduction par utilisation de la règle 62 (SwitchEndElement)
    $défaut  réduction par utilisation de la règle 60 (SwitchElement)


État 120

   59 SwitchElement: DEFAULT ':' .

    $défaut  réduction par utilisation de la règle 59 (SwitchElement)


État 121

   54 CorpsSwitch: '{' SuiteSwitch SwitchEndElement '}' .

    $défaut  réduction par utilisation de la règle 54 (CorpsSwitch)


État 122

   18 Instr: . LValue '=' Exp ';'
   19      | . IF '(' Exp ')' Instr
   20      | . IF '(' Exp ')' Instr ELSE Instr
   20      | IF '(' Exp ')' Instr ELSE . Instr
   21      | . WHILE '(' Exp ')' Instr
   22      | . IDENT '(' Arguments ')' ';'
   23      | . RETURN Exp ';'
   24      | . RETURN ';'
   25      | . '{' SuiteInstr '}'
   26      | . ';'
   27      | . Switch
   47 LValue: . IDENT
   52 Switch: . EnTeteSwitch CorpsSwitch
   53 EnTeteSwitch: . SWITCH '(' Exp ')'

    IDENT   décalage et aller à l'état 35
    IF      décalage et aller à l'état 36
    WHILE   décalage et aller à l'état 37
    RETURN  décalage et aller à l'état 38
    SWITCH  décalage et aller à l'état 39
    ';'     décalage et aller à l'état 40
    '{'     décalage et aller à l'état 41

    Instr         aller à l'état 124
    LValue        aller à l'état 44
    Switch        aller à l'état 45
    EnTeteSwitch  aller à l'état 46


État 123

   58 SwitchElement: CASE Exp ':' .

    $défaut  réduction par utilisation de la règle 58 (SwitchElement)


État 124

   20 Instr: IF '(' Exp ')' Instr ELSE Instr .

    $défaut  réduction par utilisation de la règle 20 (Instr)
